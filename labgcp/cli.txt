export PROJECT_ID=$(gcloud config get-value project)
export PROJECT_NUMBER=$(gcloud projects describe $PROJECT_ID --format='value(projectNumber)')
export REGION=us-central1
export ZONE=us-central1-c
gcloud config set compute/region $REGION

curl -sS https://webi.sh/gh | sh 
gh auth login 
gh api user -q ".login"
GITHUB_USERNAME=$(gh api user -q ".login")
git config --global user.name "${GITHUB_USERNAME}"
git config --global user.email "${USER_EMAIL}"
echo ${GITHUB_USERNAME}
echo ${USER_EMAIL}



gcloud services enable container.googleapis.com \
    cloudbuild.googleapis.com \
    secretmanager.googleapis.com \
    containeranalysis.googleapis.com
	
gcloud artifacts repositories create my-repository \
  --repository-format=docker \
  --location=$REGION
  
gcloud container clusters create hello-cluster --num-nodes 3 --enable-autoscaling --min-nodes 2 --max-nodes 6 --zone $ZONE
#Create the prod and dev namespaces on your cluster.
kubectl create namespace dev 
kubectl create namespace prod

# criar  git
mkdir sample-app
cd ~
gsutil cp -r gs://spls/gsp330/sample-app/* sample-app


#criar repositorio no github

export REGION="us-central1"
export ZONE="us-central1-c"
for file in sample-app/cloudbuild-dev.yaml sample-app/cloudbuild.yaml; do
    sed -i "s/<your-region>/${REGION}/g" "$file"
    sed -i "s/<your-zone>/${ZONE}/g" "$file"
done

cd sample-app
git init
git add README.md
git commit -m "first commit"
git branch -M main
git remote add origin https://github.com/desenvolvedorjairomonassa/sample-app.git
git push -u origin main

git status
cd sample-app
git add .
git commit -m "created v1.0"
git push origin dev


kubectl expose deployment development-deployment --name dev-deployment-service --type LoadBalancer --port 8080  --target-port 8080 --namespace=dev
```
